importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Check for module docstring:
	>>> m = __import__("0-add_integer").__doc__
	>>> len(m) > 1
	True

Check for function docstring:
	>>> f = __import__("0-add_integer").add_integer.__doc__
	>>> len(f) > 1
	True

Check for addition of two integers:
	>>> add_integer(2, 3)
	5

Check for addition with negative integer:
	>>> add_integer(-5, 8)
	3

Check for negative result:
	>>> add_integer(5, -8)
	-3

Check for addition if a is float:
	>>> add_integer(1.4, 2)
	3

Check for addition if b is float:
	>>> add_integer(1, 2.8)
	3

Check for addition if both are float:
	>>> add_integer(2.6, 3.3)
	5

Check for integer type on variable a:
	>>> add_integer("hola", 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Check for integer type on variable b:
	>>> add_integer(5, [1])
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Check for NaN:
	>>> add_integer(1, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Check for infinite integer:
	>>> add_integer(1, float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

Check for no arguments:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'
